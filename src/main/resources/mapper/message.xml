<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper  namespace="com.example.newke.dao.MessageDao">

    <sql id="selectFields">
        id,from_id,to_id,conversation_id,content,`status`,create_time
    </sql>

    <select id="getAllMessagesThisUser" resultType="com.example.newke.entity.Message">
        select <include refid="selectFields"></include>
        from `message`
        where id in (
        SELECT MAX(id)
        FROM `message`
        WHERE from_id != 1
        AND `status` != 2
        AND (from_id = #{userId} OR to_id = #{userId})
        GROUP BY conversation_id
        )
        order by create_time desc
    </select>


    <select id="getCountOfUnread" resultType="java.lang.Integer">
        select count(*) from message where status = 0
        and conversation_id = #{conversationId}
    </select>

    <select id="getCountOfAllMessage" resultType="java.lang.Integer">
        select count(*) from message where status != 2 and conversation_id =#{conversationId}
    </select>

    <select id="getTotalUnreadMessage" resultType="java.lang.Integer">
        SELECT count(*)
        FROM `message`
        WHERE from_id != 1
          AND `status` = 0
          AND (from_id = #{userId} OR to_id = #{userId})
    </select>

    <select id="getAllUnreadNoticeCount" resultType="java.lang.Integer">
        select count(*)
        from `message`
        where from_id = 1
          and to_id = #{userId}
          and `status` = 0
    </select>

    <select id="getAllMessageThisConversation" resultType="com.example.newke.entity.Message">
        select <include refid="selectFields"></include>
        from `message`
        where conversation_id = #{conversationId}
        AND `status` != 2
        order by create_time desc
    </select>

    <update id="updateMessageStatus">
        update `message` set `status` = #{status} where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>

